services:
  database:
    image: mysql:8.0
    container_name: PRODUCTION1
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      # Không cần MYSQL_DATABASE ở đây vì file init.sql đã tự tạo
    volumes:
      # Dòng này sẽ mount thư mục chứa dữ liệu DB ra ngoài container
      - db_data:/var/lib/mysql
      # Dòng QUAN TRỌNG: Tự động chạy file .sql khi container khởi động lần đầu
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      # Mở port 3306 để có thể kết nối từ bên ngoài vào DB (nếu cần gỡ lỗi)
      - "3306:3306"

  backend:
    build: ./backend  # <-- Đảm bảo dòng này tồn tại
    container_name: remote_lab_backend
    restart: unless-stopped
    ports:
      - "5000:5000"  # <-- Mở cổng 5000 của máy chủ, ánh xạ vào cổng 5000 của container
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # Các biến môi trường này sẽ được truyền vào container backend
      DB_HOST: database
      DB_USER: root
      DB_PASSWORD: ${DB_ROOT_PASSWORD} # Lấy từ file .env
      DB_NAME: remote_lab
    depends_on:
      - database # Đảm bảo backend chỉ khởi động sau khi database đã sẵn sàng
# ... các service khác ...
  nginx:
    image: nginx:1.25-alpine
    container_name: remote_lab_nginx
    restart: unless-stopped
    ports:
      - "80:80" # Mở cổng 80 của máy chủ để truy cập web
    volumes:
      # Mount code frontend vào thư mục phục vụ web của Nginx
      - ./frontend/templates:/usr/share/nginx/html
      # Mount file cấu hình Nginx
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend

volumes:
  db_data: