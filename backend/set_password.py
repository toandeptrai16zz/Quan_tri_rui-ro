# File: set_password.py
import mysql.connector
from werkzeug.security import generate_password_hash

# --- B·∫†N C√ì TH·ªÇ THAY ƒê·ªîI M·∫¨T KH·∫®U M·ªöI ·ªû ƒê√ÇY ---
NEW_PASSWORD = "Admin123"
TARGET_USERNAME = "admin"
# -----------------------------------------

try:
    print(f"üîÑ ƒêang k·∫øt n·ªëi ƒë·∫øn database...")
    db = mysql.connector.connect(
        host="localhost",
        user="root",
        password="Chuong2004@", # Thay ƒë·ªïi n·∫øu m·∫≠t kh·∫©u DB c·ªßa b·∫°n kh√°c
        database="flask_app"
    )
    cur = db.cursor()

    print(f"üîë ƒêang m√£ h√≥a m·∫≠t kh·∫©u m·ªõi...")
    hashed_password = generate_password_hash(NEW_PASSWORD)

    print(f"üÜô ƒêang c·∫≠p nh·∫≠t m·∫≠t kh·∫©u cho user '{TARGET_USERNAME}'...")
    cur.execute(
        "UPDATE users SET password = %s WHERE username = %s",
        (hashed_password, TARGET_USERNAME)
    )
    db.commit()

    if cur.rowcount > 0:
        print(f"\n‚úÖ ƒê√£ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho '{TARGET_USERNAME}' th√†nh c√¥ng!")
        print(f"   => M·∫≠t kh·∫©u m·ªõi l√†: {NEW_PASSWORD}")
    else:
        print(f"\n‚ùå Kh√¥ng t√¨m th·∫•y user '{TARGET_USERNAME}' ƒë·ªÉ c·∫≠p nh·∫≠t.")

    cur.close()
    db.close()

except Exception as e:
    print(f"\nüí• G·∫∑p l·ªói: {e}")
